/*
Вокруг считающего стоит N человек, из которых выделен первый, а остальные занумерованы по часовой стрелке числами от 2 до N. 
Считающий, начиная с кого-то, ведет счет до M. Человек на котором остановился счет, выходит из круга. 
Счет продолжается со следующего человека и так до тех пор, пока не останется один человек.
Определить:
a) номер оставшегося человека, если известно M и то, что счет начинался с первого человека;
b) номер человека c которого начинался счет, если известно M и номер оставшегося человека L.
*/
#include "listcl.h"

using namespace std;

int main() {
    FILE* m = fopen("inp.txt","r");
    FILE* e = fopen("out.txt","w");
    int N, M, L;
    Slist<int> A;
    fscanf(m, "%d %d %d", &N, &M, &L);
    if(N < 1) {
        cout<<"Количество N человек < 1";
        return 0;
    }
    // Создание односвязного списка
    for (int i = 1; i <= N; i++) {
        A.Add(i);
    }
    int i = 41;
    cout<<A[i]->x<<endl;
    A.Show();
    Node<int>* last = A[1];
    cout<<" "<<last->x;
    // Цикл по обходу списка
    for (int i = 1; i <= N; i++) {
        // Цикл для перехода на M-й элемент вперед
        for (int j = 1; j < M; j++) {
            last = last->next;
        }
        // Обновление указателей для удаления текущего элемента
        Node<int>* temp = last->next;
        last->next = temp->next;
        // Вывод удаленного элемента
        printf("%d ", temp->x);
        // Освобождение памяти, если это необходимо
        // free(temp);
        // Обновление значения last
        last = last->next;
    }
    printf("a) %d ", last->x);
    return 0;
}